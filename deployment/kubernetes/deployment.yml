---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-management-backend
  namespace: production
  labels:
    app: workflow-management
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: workflow-management
      tier: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: workflow-management
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: backend
          image: ${ECR_REGISTRY}/${ECR_REPOSITORY}-backend:${IMAGE_TAG}
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3000"
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: workflow-management-secrets
                  key: mongodb-uri
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: workflow-management-config
                  key: redis-host
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: workflow-management-config
                  key: redis-port
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: workflow-management-secrets
                  key: redis-password
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: workflow-management-secrets
                  key: jwt-secret
            - name: STRIPE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: workflow-management-secrets
                  key: stripe-secret-key
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: workflow-management-secrets
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: workflow-management-secrets
                  key: aws-secret-access-key
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: logs-volume
              mountPath: /app/logs
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: logs-volume
          persistentVolumeClaim:
            claimName: workflow-management-logs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-management-frontend
  namespace: production
  labels:
    app: workflow-management
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: workflow-management
      tier: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: workflow-management
        tier: frontend
    spec:
      containers:
        - name: frontend
          image: ${ECR_REGISTRY}/${ECR_REPOSITORY}-frontend:${IMAGE_TAG}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
          env:
            - name: REACT_APP_API_URL
              valueFrom:
                configMapKeyRef:
                  name: workflow-management-config
                  key: api-url
            - name: REACT_APP_STRIPE_PUBLIC_KEY
              valueFrom:
                configMapKeyRef:
                  name: workflow-management-config
                  key: stripe-public-key
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: workflow-management-backend
  namespace: production
  labels:
    app: workflow-management
    tier: backend
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: workflow-management
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: workflow-management-frontend
  namespace: production
  labels:
    app: workflow-management
    tier: frontend
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: workflow-management
    tier: frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: workflow-management
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  tls:
    - hosts:
        - api.workflow-management.com
        - workflow-management.com
      secretName: workflow-management-tls
  rules:
    - host: api.workflow-management.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: workflow-management-backend
                port:
                  name: http
    - host: workflow-management.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: workflow-management-frontend
                port:
                  name: http
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: workflow-management-backend
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: workflow-management-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: workflow-management-frontend
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: workflow-management-frontend
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
